//–ò–º–µ–µ—Ç—Å—è –≥–∏—Ä–ª—è–Ω–¥–∞, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ 32 –ª–∞–º–ø–æ—á–µ–∫. –ö–∞–∂–¥–∞—è –ª–∞–º–ø–æ—á–∫–∞ –∏–º–µ–µ—Ç
//–¥–≤–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è - –≤–∫–ª—é—á–µ–Ω–∞ –∏–ª–∏ –≤—ã–∫–ª—é—á–µ–Ω–∞. 
//–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã:
//1. –º–µ—Ç–æ–¥ blink, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –º–∏–≥–∞—Ç—å –ª–∞–º–ø–æ—á–∫–∞–º–∏ –≥–∏—Ä–ª—è–Ω–¥—ã –æ–¥–∏–Ω —Ä–∞–∑
//(–æ–ø–µ—Ä–∞—Ü–∏—è ~);
//2. –º–µ—Ç–æ–¥ run, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –≥–∏—Ä–ª—è–Ω–¥—É –≤ —Ä–µ–∂–∏–º –±–µ–≥—É—â–µ–π
//—Å—Ç—Ä–æ–∫–∏ (–æ–ø–µ—Ä–∞—Ü–∏—è << –∏–ª–∏ >>);
//3. –º–µ—Ç–æ–¥ isFirstLampOn, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤—ã—è—Å–Ω—è—Ç—å –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ –ª–∞–º–ø–æ—á–∫–∞
//–≤ –ø–µ—Ä–≤–æ–π –ø–æ–∑–∏—Ü–∏–∏ (–Ω–∞–ª–æ–∂–µ–Ω–∏–µ –º–∞—Å–∫–∏ —Å –ø–æ–º–æ—â—å—é &);
//4. –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ä–∞—Å–ø–µ—á–∞—Ç—ã–≤–∞—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–∏—Ä–ª—è–Ω–¥—ã.
//–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–≤–æ–∏—á–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ —á–∏—Å–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–µ—Ç–æ–¥
//Integer.toBinaryString(a).
//5. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–æ–±–∏—Ç–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏.
/*************  ‚ú® Codeium Command üåü  *************/
//–î–æ–±–∞–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
//1. –ü–æ–º–æ—â—å—é –∫–ª–∞—Å—Å–∞ Scanner –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4.
//2. –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ 1 - –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –º–µ—Ç–æ–¥ –º–∏–≥–∞–Ω–∏—è, 2 - –ø—Ä–æ–≤–µ—Ä–∫—É
//–ø–µ—Ä–≤–æ–π –ª–∞–º–ø–æ—á–∫–∏, 3 - –º–µ—Ç–æ–¥ –±–µ–≥—É—â–µ–π —Å—Ç—Ä–æ–∫–∏, 4 - –≤—ã–≤–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è
//–≥–∏—Ä–ª—è–Ω–¥—ã –Ω–∞ –∫–æ–Ω—Å–æ–ª—å.
//3. –î–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä switch.
//4. –ò–∑–º–µ–Ω–∏—Ç–µ –º–µ—Ç–æ–¥ –º–∏–≥–∞–Ω–∏—è: –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –º–∏–≥–Ω—É—Ç—å –≥–∏—Ä–ª—è–Ω–¥–æ–π 10 —Ä–∞–∑.
//–ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä for.
//5. –ò–∑–º–µ–Ω–∏—Ç–µ –º–µ—Ç–æ–¥ –±–µ–≥—É—â–µ–π —Å—Ç—Ä–æ–∫–∏: –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω–∏—Ç—å
//–æ–ø–µ—Ä–∞—Ü–∏—é 10 —Ä–∞–∑. –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä for.

import java.util.Random;
import java.util.Scanner;

public class Number11 {
    private int state; // —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–∏—Ä–ª—è–Ω–¥—ã (32 –±–∏—Ç–∞)

    public Number11() {
        Random random = new Random();
        state = 0; // –Ω–∞—á–Ω–µ–º —Å –Ω—É–ª–µ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –±–∏—Ç —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
        for (int i = 0; i < 32; i++) {
            // –ï—Å–ª–∏ —Å–ª—É—á–∞–π–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–µ—Ç–Ω–æ–µ, —Ç–æ –≤–∫–ª—é—á–∞–µ–º –ª–∞–º–ø–æ—á–∫—É, –∏–Ω–∞—á–µ –≤—ã–∫–ª—é—á–∞–µ–º
            if (random.nextBoolean()) {
                state |= (1 << i); // —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∏—Ç –Ω–∞ –ø–æ–∑–∏—Ü–∏—é i
            }
        }
    }

    public void blink() {
        state = ~state; // –º–∏–≥–∞–Ω–∏–µ –ª–∞–º–ø–æ—á–∫–∞–º–∏ –≥–∏—Ä–ª—è–Ω–¥—ã
    }

    public void run() {
        state = (state << 1) | (state >>> 31); // –∑–∞–ø—É—Å–∫ –≥–∏—Ä–ª—è–Ω–¥—ã –≤ —Ä–µ–∂–∏–º –±–µ–≥—É—â–µ–π —Å—Ç—Ä–æ–∫–∏
    }

    public boolean isFirstLampOn() {
        return (state & (1 << 31)) != 0; // –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ –ª–∞–º–ø–æ—á–∫–∞ –≤ –ø–µ—Ä–≤–æ–π –ø–æ–∑–∏—Ü–∏–∏
    }

    public void printWholeNumber() {
         // –ü—Ä–∏–≤–æ–¥–∏–º –∫ 32-–±–∏—Ç–Ω–æ–º—É –¥–≤–æ–∏—á–Ω–æ–º—É –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—é, –¥–æ–±–∞–≤–ª—è—è –≤–µ–¥—É—â–∏–µ –Ω—É–ª–∏
        String binaryString = String.format("%32s", Integer.toBinaryString(state)).replace(' ', '0');
        System.out.println(binaryString);
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the number(1 - blinking method, 2 - checking the first light, 3 - running line mode, 4 - print of the garland state): ");
        int number = scanner.nextInt();
        Number11 garland = new Number11(); // —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –≥–∏—Ä–ª—è–Ω–¥—ã —Å —Å–ª—É—á–∞–π–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
        //System.out.println("Initial state of the garland:");
        //garland.printWholeNumber();

        switch (number) {
            case 1:
                System.out.println("Blinking lights:");
                for (int i = 0; i < 10; i++) {
                    garland.blink();
                    garland.printWholeNumber();
                }
                break;
            case 2:
                System.out.println("Is the first light on?");
                System.out.println(garland.isFirstLampOn());
                break;
            case 3:
                System.out.println("Running line mode:");
                for (int i = 0; i < 10; i++) {
                    garland.run();
                    garland.printWholeNumber();
                }
                break;
            case 4:
                System.out.println("State of the garland:");
                garland.printWholeNumber();
                break;
            default:
                System.out.println("Incorrect number");
        }
    }
}